{"version":3,"sources":["../src/index.js"],"names":["utils","textReplace","scripts","build","buildCordova","dev","devCordova","prodCordova","startCordova","webCordova","cordova","add","compile","plugins","prepare","ripple","remove","run","serve","clean","pwd","resolve","binPwd","existsSync","Error","cordovaPwd","ripplePwd","ncpPwd","babelPwd","uglifyPwd","sassPwd","recreateDir","copyByFound","copyFolders","copy","assets","components","htmlReplace","jet","rjsOptimizer"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AAEA;;;;;;;AAIO,IAAMA,wBAAQ;AACjBC;AADiB,CAAd;;AAIA,IAAMC,4BAAU;AACnBC,0BADmB;AAEnBC,wCAFmB;AAGnBC,sBAHmB;AAInBC,oCAJmB;AAKnBC,sCALmB;AAMnBC,wCANmB;AAOnBC;AAPmB,CAAhB;;AAUA,IAAMC,4BAAU;AACnBC,sBADmB;AAEnBC,8BAFmB;AAGnBC,8BAHmB;AAInBC,8BAJmB;AAKnBC,4BALmB;AAMnBC,4BANmB;AAOnBC,sBAPmB;AAQnBC,0BARmB;AASnBC,0BATmB;AAUnBhB;AAVmB,CAAhB;;AAaA,IAAMiB,oBAAM,eAAKC,OAAL,CAAa,cAAb,EAA6B,eAA7B,CAAZ;;AAEP,IAAIC,SAAS,IAAb;;AAEA,IAAI,aAAGC,UAAH,CAAc,eAAKF,OAAL,CAAaD,GAAb,EAAkB,mBAAlB,EAAuC,SAAvC,CAAd,CAAJ,EAAsE;AAClEE,aAAS,eAAKD,OAAL,CAAaD,GAAb,EAAkB,mBAAlB,CAAT;AACH,CAFD,MAEO,IAAG,aAAGG,UAAH,CAAc,eAAKF,OAAL,CAAaD,GAAb,EAAkB,SAAlB,EAA6B,SAA7B,CAAd,CAAH,EAA2D;AAC9DE,aAAS,eAAKD,OAAL,CAAaD,GAAb,EAAkB,SAAlB,CAAT;AACH,CAFM,MAEA;AACH,UAAM,IAAII,KAAJ,CAAU,kDAAV,CAAN;AACH;;AAEM,IAAMC,kCAAa,eAAKJ,OAAL,CAAaC,MAAb,EAAqB,SAArB,CAAnB;AACA,IAAMI,gCAAY,eAAKL,OAAL,CAAaC,MAAb,EAAqB,QAArB,CAAlB;AACA,IAAMK,0BAAS,eAAKN,OAAL,CAAaC,MAAb,EAAqB,KAArB,CAAf;AACA,IAAMM,8BAAW,eAAKP,OAAL,CAAaC,MAAb,EAAqB,OAArB,CAAjB;AACA,IAAMO,gCAAY,eAAKR,OAAL,CAAaC,MAAb,EAAqB,WAArB,CAAlB;AACA,IAAMQ,4BAAU,eAAKT,OAAL,CAAaC,MAAb,EAAqB,WAArB,CAAhB;;QAGHS,W;QACAC,W;QACAC,W;QACAC,I;QACAf,K;QACAgB,M;QACAC,U;QACAC,W;QACAC,G;QACAC,Y;QACArB,K","file":"index.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport resolve from 'resolve'\n\nimport recreateDir from './utils/recreateDir'\nimport copyByFound from './utils/copyByFound'\nimport copyFolders from './utils/copyFolders'\nimport copy from './utils/copy'\nimport clean from './utils/clean'\n\nimport assets from './common/assets'\nimport components from './common/components'\nimport htmlReplace from './common/htmlReplace'\nimport jet from './common/jet'\nimport rjsOptimizer from './common/rjsOptimizer'\nimport serve from './common/serve'\n\nimport add from './cordova/add'\nimport compile from './cordova/compile'\nimport plugins from './cordova/plugins'\nimport prepare from './cordova/prepare'\nimport ripple from './cordova/ripple'\nimport buildC from './cordova/build'\nimport remove from './cordova/remove'\nimport runC from './cordova/run'\nimport serveC from './cordova/serve'\nimport cleanC from './cordova/clean'\n\nimport build from './scripts/build'\nimport buildCordova from './scripts/buildCordova'\nimport dev from './scripts/dev'\nimport devCordova from './scripts/devCordova'\nimport prodCordova from './scripts/prodCordova'\nimport startCordova from './scripts/startCordova'\nimport webCordova from './scripts/webCordova'\nimport releaseCordova from './scripts/releaseCordova'\n\nimport {textReplace} from './utils/_utils'\n\nimport run from './common/run'\n\nexport default run\n\nexport const utils = {\n    textReplace\n}\n\nexport const scripts = {\n    build,\n    buildCordova,\n    dev,\n    devCordova,\n    prodCordova,\n    startCordova,\n    webCordova\n}\n\nexport const cordova = {\n    add,\n    compile,\n    plugins,\n    prepare,\n    ripple,\n    remove,\n    run: runC,\n    serve: serveC,\n    clean: cleanC,\n    build: buildC\n}\n\nexport const pwd = path.resolve('node_modules', 'jet-buildtool')\n\nlet binPwd = null\n\nif (fs.existsSync(path.resolve(pwd, 'node_modules/.bin', 'cordova'))) {\n    binPwd = path.resolve(pwd, 'node_modules/.bin')\n} else if(fs.existsSync(path.resolve(pwd, '../.bin', 'cordova'))) {\n    binPwd = path.resolve(pwd, '../.bin')\n} else {\n    throw new Error('Any executable find, try \"yarn\" or \"npm install\"')\n}\n\nexport const cordovaPwd = path.resolve(binPwd, 'cordova')\nexport const ripplePwd = path.resolve(binPwd, 'ripple')\nexport const ncpPwd = path.resolve(binPwd, 'ncp')\nexport const babelPwd = path.resolve(binPwd, 'babel')\nexport const uglifyPwd = path.resolve(binPwd, 'uglifycss')\nexport const sassPwd = path.resolve(binPwd, 'node-sass')\n\nexport {\n    recreateDir,\n    copyByFound,\n    copyFolders,\n    copy,\n    clean,\n    assets,\n    components,\n    htmlReplace,\n    jet,\n    rjsOptimizer,\n    serve\n}"]}