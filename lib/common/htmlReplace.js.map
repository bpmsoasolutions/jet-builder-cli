{"version":3,"sources":["../../src/common/htmlReplace.js"],"names":["args","split","process","argv","slice","length","text","index","output","cordova","indexOf","production","writeFileSync","join","encoding","htmlReplace","readFileSync"],"mappings":";;;;;;AAQA;;;yDAEA,iBAA2BA,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AAEIC,4BAHR,GAGeC,KAHf;AAKQC,8BALR,GAKkBR,KAAK,CAAL,CAAD,GAAYA,KAAK,CAAL,CAAZ,GAAsB,MALvC;AAMQS,+BANR,GAMmBT,KAAKU,OAAL,CAAa,WAAb,IAA4B,CAAC,CANhD;AAOQC,kCAPR,GAOsBX,KAAKU,OAAL,CAAa,cAAb,IAA+B,CAAC,CAPtD;;;AASI,4BAAID,OAAJ,EAAa;AACTH,mCAAO,wBAAY,oBAAZ,EAAkC,IAAlC,EAAwC,2EAAxC,EAAqHA,IAArH,CAAP;AACH,yBAFD,MAEO;AACHA,mCAAO,wBAAY,oBAAZ,EAAkC,IAAlC,EAAwC,EAAxC,EAA4CA,IAA5C,CAAP;AACH;;AAED,4BAAIK,UAAJ,EAAe;AACXL,mCAAO,wBAAY,mBAAZ,EAAiC,iBAAjC,EAAoD,6DAApD,EAAmHA,IAAnH,CAAP;AACAA,mCAAO,wBAAY,kBAAZ,EAAgC,gBAAhC,EAAkD,2EAAlD,EAA+HA,IAA/H,CAAP;AACH;;AAEDA,+BAAO,wBAAY,kBAAZ,EAAgC,IAAhC,kEAAsGA,IAAtG,CAAP;;AAEA,qCAAGM,aAAH,CAAiB,eAAKC,IAAL,CAAUL,MAAV,EAAkB,YAAlB,CAAjB,EAAkDF,IAAlD,EAAwD,EAACQ,UAAU,OAAX,EAAxD;;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,W;;;;;AAVf;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMR,QAAQ,aAAGS,YAAH,CAAgB,eAAKH,IAAL,CAAU,KAAV,EAAiB,YAAjB,CAAhB,EAAgD,OAAhD,CAAd,C,kBA4BeE,W","file":"htmlReplace.js","sourcesContent":["import shell from 'shelljs'\nimport fs from 'fs'\nimport path from 'path'\n\nimport {textReplace} from '../utils/_utils'\n\nconst index = fs.readFileSync(path.join('src', 'index.html'), 'utf-8')\n\n// $ htmlReplace [cordova or empty]\n\nasync function htmlReplace(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    let text = index\n\n    let output = (args[0]) ? args[0] : 'temp'\n    let cordova = (args.indexOf('--cordova') > -1)\n    let production = (args.indexOf('--production') > -1)\n\n    if (cordova) {\n        text = textReplace('<!-- cordovaJs -->', null, '<script type=\"text/javascript\" charset=\"utf-8\" src=\"cordova.js\"></script>', text)\n    } else {\n        text = textReplace('<!-- cordovaJs -->', null, '', text)\n    }\n\n    if (production){\n        text = textReplace('<!-- startCss -->', '<!-- endCss -->', '<link rel=\"stylesheet\" href=\"styles.css\" type=\"text/css\" />', text)\n        text = textReplace('<!-- startJs -->', '<!-- endJs -->', '<script type=\"text/javascript\" charset=\"utf-8\" src=\"scripts.js\"></script>', text)\n    }\n\n    text = textReplace('<!-- altaCss -->', null, `<link rel=\"stylesheet\" href=\"oj-alta.css\" type=\"text/css\" />`, text)\n\n    fs.writeFileSync(path.join(output, 'index.html'), text, {encoding: 'utf-8'})\n}\nexport default htmlReplace;"]}