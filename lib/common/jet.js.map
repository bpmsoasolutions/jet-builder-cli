{"version":3,"sources":["../../src/common/jet.js"],"names":["args","split","process","argv","slice","length","cordova","indexOf","destination","platforms","forEach","platform","out","jetPath","in","jetAssets"],"mappings":";;;;;;AAaA;;;yDAEA,iBAAyBA,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AAEIC,+BAHR,GAGmBN,KAAKO,OAAL,CAAa,WAAb,IAA4B,CAAC,CAHhD;AAKQC,mCALR,GAKuBF,OAAD,GAAY,SAAZ,GAAwB,MAL9C;;AAAA,6BAOQA,OAPR;AAAA;AAAA;AAAA;;AAQQG,kCAAUC,OAAV,CAAkB,UAACC,QAAD,EAAc;AAC5B,qFAA+BA,SAASC,GAAxC,oBAA0DD,SAASC,GAAnE,2BAA4FD,SAASC,GAArG;AACA,sEAAgBC,OAAhB,aAA+BF,SAASG,EAAxC,gCAAqEH,SAASC,GAA9E;AACA,uEAAiBC,OAAjB,aAAgCF,SAASG,EAAzC,2BAAiEH,SAASC,GAA1E;AACA,uEAAiBC,OAAjB,aAAgCF,SAASG,EAAzC,0BAAgEH,SAASC,GAAzE;AACH,yBALD;AARR;AAAA;;AAAA;AAAA;AAAA,+BAec,2CAAiBC,OAAjB,wBAA2CL,WAA3C,CAfd;;AAAA;AAAA;AAAA,+BAgBc,0CAAgBK,OAAhB,8BAAgDL,WAAhD,CAhBd;;AAAA;AAAA;AAAA,+BAiBc,2CAAiBK,OAAjB,yBAA4CL,WAA5C,CAjBd;;AAAA;AAAA;AAAA,+BAoBU,2CAAiBK,OAAjB,oBAAuCL,WAAvC,CApBV;;AAAA;AAAA;AAAA,+BAqBU,2CAAiBK,OAAjB,8BAAiDL,WAAjD,CArBV;;AAAA;AAAA;AAAA,+BAsBU,yCAAoBA,WAApB,qBAtBV;;AAAA;AAAA;AAAA,+BAuBU,2CAAiBK,OAAjB,kCAAqDL,WAArD,qBAvBV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeO,S;;;;;AAff;;;;AAEA;;;;;;;;AAEA,IAAMN,YAAY,CACd,EAAEK,IAAI,cAAN,EAAsBF,KAAK,SAA3B,EADc,EAEd,EAAEE,IAAI,UAAN,EAAkBF,KAAK,KAAvB,EAFc,EAGd,EAAEE,IAAI,cAAN,EAAsBF,KAAK,SAA3B,EAHc,EAId,EAAEE,IAAI,MAAN,EAAcF,KAAK,SAAnB,EAJc,CAAlB;;AAOA,IAAMC,UAAU,oCAAhB,C,kBA8BeE,S","file":"jet.js","sourcesContent":["import shell from 'shelljs'\n\nimport run, {recreateDir, copy} from '../index'\n\nconst platforms = [\n    { in: 'alta-android', out: 'android'},\n    { in: 'alta-ios', out: 'ios'},\n    { in: 'alta-windows', out: 'windows'},\n    { in: 'alta', out: 'browser'}\n]\n\nconst jetPath = './src/bower_modules/oraclejet/dist'\n\n// $ jetAssets [cordova]\n\nasync function jetAssets(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    let cordova = (args.indexOf('--cordova') > -1)\n\n    let destination = (cordova) ? 'app/www' : 'dist'\n\n    if (cordova) {\n        platforms.forEach((platform) => {\n            run(recreateDir, `app/merges/${platform.out} app/merges/${platform.out}/images app/merges/${platform.out}/fonts`)\n            run(copy, `-f ${jetPath}/css/${platform.in}/oj-alta.css app/merges/${platform.out}`)\n            run(copy, `-rf ${jetPath}/css/${platform.in}/images app/merges/${platform.out}`)\n            run(copy, `-rf ${jetPath}/css/${platform.in}/fonts app/merges/${platform.out}`)\n        })\n    } else {\n        await run(copy, `-rf ${jetPath}/css/alta/fonts ${destination}`)\n        await run(copy, `-f ${jetPath}/css/alta/oj-alta.css ${destination}`)\n        await run(copy, `-rf ${jetPath}/css/alta/images ${destination}`)\n    }\n\n    await run(copy, `-rf ${jetPath}/css/common ${destination}`)\n    await run(copy, `-rf ${jetPath}/js/libs/oj/resources ${destination}`)\n    await run(recreateDir, `${destination}/ojtranslations`)\n    await run(copy, `-rf ${jetPath}/js/libs/oj/resources/nls ${destination}/ojtranslations`)\n}\n\nexport default jetAssets;\n\n\n\n\n"]}