{"version":3,"sources":["../../src/cordova/add.js"],"names":["args","split","process","argv","slice","length","cd","map","exec","resolve","target","add"],"mappings":";;;;;;AAEA;;;yDAEA,iBAAmBA,IAAnB;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AAEA,0CAAMC,EAAN,CAAS,KAAT;AACAN,6BAAKO,GAAL,CAAS,kBAAQ;AACb,8CAAMC,IAAN,CAAc,eAAKC,OAAL,CAAa,2BAAb,CAAd,qBAAuEC,MAAvE;AACA,8CAAMF,IAAN,CAAc,eAAKC,OAAL,CAAa,2BAAb,CAAd,sBAAwEC,MAAxE;AACH,yBAHD;AAIA,0CAAMJ,EAAN,CAAS,IAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeK,G;;;;;AAJf;;;;AACA;;;;;;;;kBAceA,G","file":"add.js","sourcesContent":["import shell from 'shelljs'\nimport path from 'path'\n// $ add [platform1] [platform2] ...\n\nasync function add(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    shell.cd('app')\n    args.map(target=>{\n        shell.exec(`${path.resolve('node_modules/.bin/cordova')} platform rm ${target}`);\n        shell.exec(`${path.resolve('node_modules/.bin/cordova')} platform add ${target}`);\n    })\n    shell.cd('..')\n}\n\nexport default add;\n\n\n"]}