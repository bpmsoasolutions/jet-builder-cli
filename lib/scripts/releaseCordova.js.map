{"version":3,"sources":["../../src/scripts/releaseCordova.js"],"names":["args","split","process","argv","slice","length","platform","indexOf","console","log","build","run","releaseCordova"],"mappings":";;;;;;AAGA;;;yDAEA,iBAA8BA,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AADJ;AAAA,+BAGU,2CAHV;;AAAA;AAKQC,gCALR,GAKmB,IALnB;;;AAOIA,mCAAYN,KAAKO,OAAL,CAAa,SAAb,IAA0B,CAAC,CAA5B,GAAiC,SAAjC,GAA6CD,QAAxD;AACAA,mCAAYN,KAAKO,OAAL,CAAa,KAAb,IAAsB,CAAC,CAAxB,GAA6B,KAA7B,GAAqCD,QAAhD;AACAA,mCAAYN,KAAKO,OAAL,CAAa,SAAb,IAA0B,CAAC,CAA5B,GAAiC,SAAjC,GAA6CD,QAAxD;;AATJ,4BAWQA,QAXR;AAAA;AAAA;AAAA;;AAAA,8BAYcE,QAAQC,GAAR,CAAY,yBAAZ,CAZd;;AAAA;AAAA;AAAA,+BAeU,qBAAI,eAAQC,KAAZ,EAAsBJ,QAAtB,gBAfV;;AAAA;AAAA,8BAiBQN,KAAKO,OAAL,CAAa,QAAb,IAAyB,CAAC,CAjBlC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAkBc,qBAAI,eAAQI,GAAZ,EAAoBL,QAApB,gBAlBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeM,c;;;;;AALf;;;;AACA;;;;AACA;;;;;;;;kBAyBeA,c","file":"releaseCordova.js","sourcesContent":["import run, {cordova} from '../index'\nimport prodCordova from './prodCordova'\nimport devCordova from './devCordova'\n// $ releaseCordova\n\nasync function releaseCordova(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    await run(prodCordova)\n\n    let platform = null\n\n    platform = (args.indexOf('android') > -1) ? 'android' : platform\n    platform = (args.indexOf('ios') > -1) ? 'ios' : platform\n    platform = (args.indexOf('windows') > -1) ? 'windows' : platform\n\n    if(!platform){\n        throw console.log('Platform not recognized')\n    }\n\n    await run(cordova.build, `${platform} --release`)\n\n    if (args.indexOf('device') > -1){\n        await run(cordova.run, `${platform} --release`)\n    }\n}\n\nexport default releaseCordova"]}