{"version":3,"sources":["../../src/scripts/buildCordova.js"],"names":["args","split","process","argv","slice","length","indexOf","build","path","resolve","buildCordova"],"mappings":";;;;;;AAGA;;;yDAEA,iBAA4BA,IAA5B;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AADJ,6BAGQL,KAAKM,OAAL,CAAa,YAAb,CAHR;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIc,2CAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAMc,0CANd;;AAAA;AAAA,8BASQN,KAAKM,OAAL,CAAa,SAAb,IAA0B,CAAC,CATnC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAUc,qBAAI,eAAQC,KAAZ,wCAAuDC,KAAKC,OAAL,CAAa,8BAAb,CAAvD,CAVd;;AAAA;AAAA,8BAYQT,KAAKM,OAAL,CAAa,KAAb,IAAsB,CAAC,CAZ/B;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAac,qBAAI,eAAQC,KAAZ,oCAAmDC,KAAKC,OAAL,CAAa,0BAAb,CAAnD,CAbd;;AAAA;AAAA,8BAeQT,KAAKM,OAAL,CAAa,SAAb,IAA0B,CAAC,CAfnC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAgBc,qBAAI,eAAQC,KAAZ,wCAAuDC,KAAKC,OAAL,CAAa,8BAAb,CAAvD,CAhBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,Y;;;;;AALf;;;;AACA;;;;AACA;;;;;;;;kBAuBeA,Y","file":"buildCordova.js","sourcesContent":["import run, {cordova} from '../index'\nimport prodCordova from './prodCordova'\nimport devCordova from './devCordova'\n// $ buildCordova\n\nasync function buildCordova(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    if (args.indexOf('production')){\n        await run(prodCordova)\n    } else {\n        await run(devCordova)\n    }\n\n    if (args.indexOf('android') > -1){\n        await run(cordova.build, `android release -- --buildConfig=${path.resolve('app/buildAndroidRelease.json')}`)\n    }\n    if (args.indexOf('ios') > -1){\n        await run(cordova.build, `ios release -- --buildConfig=${path.resolve('app/buildIOSRelease.json')}`)\n    }\n    if (args.indexOf('windows') > -1){\n        await run(cordova.build, `windows release -- --buildConfig=${path.resolve('app/buildWindowsRelease.json')}`)\n    }\n}\n\nexport default buildCordova"]}