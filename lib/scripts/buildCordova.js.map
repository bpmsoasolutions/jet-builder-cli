{"version":3,"sources":["../../src/scripts/buildCordova.js"],"names":["args","split","process","argv","slice","length","indexOf","env","platform","console","log","build","run","buildCordova"],"mappings":";;;;;;AAGA;;;yDAEA,iBAA4BA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AADJ,6BAGQL,KAAKM,OAAL,CAAa,YAAb,CAHR;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIc,2CAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAMc,0CANd;;AAAA;AASQC,2BATR,GASeP,KAAKM,OAAL,CAAa,SAAb,CAAD,GAA4B,WAA5B,GAA0C,SATxD;AAUQE,gCAVR,GAUmB,IAVnB;;;AAYIA,mCAAYR,KAAKM,OAAL,CAAa,SAAb,IAA0B,CAAC,CAA5B,GAAiC,SAAjC,GAA6CE,QAAxD;AACAA,mCAAYR,KAAKM,OAAL,CAAa,KAAb,IAAsB,CAAC,CAAxB,GAA6B,KAA7B,GAAqCE,QAAhD;AACAA,mCAAYR,KAAKM,OAAL,CAAa,SAAb,IAA0B,CAAC,CAA5B,GAAiC,SAAjC,GAA6CE,QAAxD;;AAdJ,4BAgBQA,QAhBR;AAAA;AAAA;AAAA;;AAAA,8BAiBcC,QAAQC,GAAR,CAAY,yBAAZ,CAjBd;;AAAA;AAAA;AAAA,+BAoBU,qBAAI,eAAQC,KAAZ,EAAsBH,QAAtB,SAAkCD,GAAlC,CApBV;;AAAA;AAAA,8BAsBQP,KAAKM,OAAL,CAAa,QAAb,IAAyB,CAAC,CAtBlC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAuBc,qBAAI,eAAQM,GAAZ,EAAoBJ,QAApB,SAAgCD,GAAhC,CAvBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeM,Y;;;;;AALf;;;;AACA;;;;AACA;;;;;;;;kBA8BeA,Y","file":"buildCordova.js","sourcesContent":["import run, {cordova} from '../index'\nimport prodCordova from './prodCordova'\nimport devCordova from './devCordova'\n// $ buildCordova\n\nasync function buildCordova(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    if (args.indexOf('production')){\n        await run(prodCordova)\n    } else {\n        await run(devCordova)\n    }\n\n    let env = (args.indexOf('release')) ? '--release' : '--debug'\n    let platform = null\n\n    platform = (args.indexOf('android') > -1) ? 'android' : platform\n    platform = (args.indexOf('ios') > -1) ? 'ios' : platform\n    platform = (args.indexOf('windows') > -1) ? 'windows' : platform\n\n    if(!platform){\n        throw console.log('Platform not recognized')\n    }\n\n    await run(cordova.build, `${platform} ${env}`)\n\n    if (args.indexOf('device') > -1){\n        await run(cordova.run, `${platform} ${env}`)\n    }\n}\n\nexport default buildCordova"]}