{"version":3,"sources":["../../src/scripts/webCordova.js"],"names":["args","split","process","argv","slice","length","indexOf","build","run","webCordova"],"mappings":";;;;;;AAIA;;;yDAEA,iBAA0BA,IAA1B;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AADJ,8BAGQL,KAAKM,OAAL,CAAa,YAAb,IAA6B,CAAC,CAHtC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIc,2CAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAMc,0CANd;;AAAA;AAAA;AAAA,+BASU,qBAAI,eAAQC,KAAZ,EAAmB,SAAnB,CATV;;AAAA;AAAA;AAAA,+BAUU,qBAAI,eAAQC,GAAZ,EAAiB,SAAjB,CAVV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,U;;;;;AANf;;;;AACA;;;;AACA;;;;;;;;kBAiBeA,U","file":"webCordova.js","sourcesContent":["import run, {cordova} from '../index'\nimport devCordova from './devCordova'\nimport prodCordova from './prodCordova'\n\n// $ devCordova\n\nasync function webCordova(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    if (args.indexOf('production') > -1){\n        await run(prodCordova)\n    } else {\n        await run(devCordova)\n    }\n\n    await run(cordova.build, 'browser')\n    await run(cordova.run, 'browser')\n}\n\nexport default webCordova\n\n\n"]}