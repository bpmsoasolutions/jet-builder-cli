{"version":3,"sources":["../../src/scripts/runCordova.js"],"names":["args","split","process","argv","slice","length","indexOf","build","run","runCordova"],"mappings":";;;;;;AAIA;;;yDAEA,iBAA0BA,IAA1B;AAAA;AAAA;AAAA;AAAA;AACIA,+BAAQA,IAAD,GAASA,KAAKC,KAAL,CAAW,GAAX,CAAT,GAA2BC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBF,QAAQC,IAAR,CAAaE,MAAnC,CAAlC;;AADJ,6BAGQL,KAAKM,OAAL,CAAa,YAAb,CAHR;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIc,2CAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAMc,0CANd;;AAAA;AAAA,8BASQN,KAAKM,OAAL,CAAa,SAAb,IAA0B,CAAC,CATnC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAUc,qBAAI,eAAQC,KAAZ,EAAmB,iBAAnB,CAVd;;AAAA;AAAA;AAAA,+BAWc,qBAAI,eAAQC,GAAZ,EAAiB,SAAjB,CAXd;;AAAA;AAAA,8BAaQR,KAAKM,OAAL,CAAa,KAAb,IAAsB,CAAC,CAb/B;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAcc,qBAAI,eAAQC,KAAZ,EAAmB,aAAnB,CAdd;;AAAA;AAAA;AAAA,+BAec,qBAAI,eAAQC,GAAZ,EAAiB,KAAjB,CAfd;;AAAA;AAAA,8BAiBQR,KAAKM,OAAL,CAAa,SAAb,IAA0B,CAAC,CAjBnC;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAkBc,qBAAI,eAAQC,KAAZ,EAAmB,iBAAnB,CAlBd;;AAAA;AAAA;AAAA,+BAmBc,qBAAI,eAAQC,GAAZ,EAAiB,SAAjB,CAnBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,U;;;;;AANf;;;;AACA;;;;AACA;;;;;;;;kBA2BeA,U","file":"runCordova.js","sourcesContent":["import run, {cordova} from '../index'\nimport devCordova from './devCordova'\nimport prodCordova from './prodCordova'\n\n// $ devCordova\n\nasync function runCordova(args) {\n    args = (args) ? args.split(' ') : process.argv.slice(3, process.argv.length)\n\n    if (args.indexOf('production')){\n        await run(prodCordova)\n    } else {\n        await run(devCordova)\n    }\n\n    if (args.indexOf('android') > -1){\n        await run(cordova.build, 'android --debug')\n        await run(cordova.run, 'android')\n    }\n    if (args.indexOf('ios') > -1){\n        await run(cordova.build, 'ios --debug')\n        await run(cordova.run, 'ios')\n    }\n    if (args.indexOf('windows') > -1){\n        await run(cordova.build, 'windows --debug')\n        await run(cordova.run, 'windows')\n    }\n}\n\nexport default runCordova\n\n\n"]}